$color-hex-case: #fff;
$color-hex-length: #aaa;
$color-hex-length-alpha: #fffa;
$color-named: #f00;

.number-leading-zero {
  line-height: .5;
  transform: translate(2px, .4px);
}

.number-no-trailing-zeros {
  left: 1px;
  top: 1.01px;
}

.string-quotes {
  content: "x";
}

.string-quotes[id="foo"] {
  display: none;
}

.length-zero-no-unit {
  left: 0;
  top: 0;
}

.unit-case {
  height: 10px;
  padding: 10em;
  width: calc(1px * 10);
}

.value-keyword-case {
  display: block;
  height: inherit;
}

.value-no-vendor-prefix {
  background: linear-gradient(bottom, #000, #fff);
  display: flex;
  max-width: max-content;
}

.value-list-comma-newline-after,
.value-list-comma-newline-before,
.value-list-comma-space-after,
.value-list-comma-space-before {
  background-size: 100px, 150px;
}

.shorthand-property-no-redundant-values {
  border-radius: 1px 2px;
  border-width: 1px 2px;
  margin: 1px;
  padding: 1px 0 2px;
}

.property-case {
  padding: 1px;
  width: 1px;
}

.property-no-vendor-prefix {
  animation-duration: 3s;
}

.declaration-bang-space-after,
.declaration-bang-space-before {
  display: block !important;
}

.declaration-colon-space-after,
.declaration-colon-space-before {
  height: 100px;
}

.declaration-property-value-blacklist {
  border: 0;
  transition: height 1s linear;
}

.declaration-block-no-duplicate-properties {
  background: #f00;
  background: rgba(255, 0, 0, .75);
  font-weight: 400;
}

.declaration-block-no-ignored-properties {
  .inline-margin {
    display: inline;
    margin-left: 10px;
    margin-right: 10px;
  }

  .inline-padding {
    display: inline;
    padding: 10px;
  }

  .inline-block {
    display: inline-block;
    width: 100px;
  }

  .table-cell {
    display: table-cell;
    vertical-align: baseline;
  }

  .relative {
    position: relative;
    vertical-align: baseline;
  }
}

.declaration-block-no-shorthand-property-overrides {
  padding: 20px;
  padding-left: 10px;
}

.declaration-block-properties-order {
  color: #fff;
  top: 0;
}

.declaration-block-semicolon-newline-after,
.declaration-block-semicolon-newline-before {
  color: #f00;
  top: 0;
}

.declaration-block-trailing-semicolon {
  color: #fff;
}

.block-closing-brace-newline-after {
  a {
    color: #f00;
  }

  b {
    color: #f00;
  }

  @if $bool == true {
    // Then
  } @else {
    // Else
  }
}

.block-closing-brace-newline-before {
  color: #f00;
}

.block-no-empty {
  display: inline;
}

.block-no-single-line {
  a,
  b {
    color: #f00;
  }

  a {
    color: #000;
    top: 1px;
  }

  @media print {
    a {
      color: #fff;
    }
  }
}

.block-opening-brace-space-before {
  color: #f0f;
}

.selector-combinator-space-after,
.selector-combinator-space-before {
  a + b {
    color: #fff;
  }

  a > b {
    color: #000;
  }
}

.selector-max-specificity {
  div {
    color: #000;
  }

  .baz .bar .bah {
    color: #fff;
  }

  .foo {
    color: #f00;

    & .baz .bah {
      color: #0f0;
    }
  }
}

.selector-no-vendor-prefix {
  input::placeholder {
    color: eee;
  }

  :full-screen a {
    color: ff0;
  }
}

.selector-pseudo-class-case:hover {
  color: #f00;
}

.selector-list-comma-newline-after,
.selector-list-comma-newline-before {
  a,
  b {
    color: #fff;
  }
}

.rule-nested-empty-line-before {
  a {
    color: #fff;
  }
  // First nested selectors and slectors after comments will be ignored
  b {
    color: #000;
  }
}

.media-feature-colon-space-after,
.media-feature-colon-space-before {
  @media (min-width: 600px) {
    a {
      color: #fff;
    }
  }
}

.media-feature-no-missing-punctuation {
  @media (max-width: 600px) {
    a {
      color: #fff;
    }
  }

  @media (width >= 20em) {
    a {
      color: #fff;
    }
  }
}

.media-feature-range-operator-space-after,
.media-feature-range-operator-space-before {
  @media (max-width >= 600px) {
    a {
      color: #fff;
    }
  }
  // First nested selectors and slectors after comments will be ignored
  @media (max-width >= 600px) {
    a {
      color: #fff;
    }
  }
}

.at-rule-empty-line-before {
  a {
    color: #fff;

    @media (max-width >= 600px) {
      color: #000;
    }
  }
}

// Ignore: "blockless-group"

@import "a.css";
@import "b.css";

.at-rule-name-case {
  @charset "UTF-8";

  @media (min-width: 50em) {
    a {
      color: #fff;
    }
  }
  // No Comment
  @media (min-width: 50em) {
    a {
      color: #fff;
    }
  }
}

.at-rule-name-space-after {
  @charset "UTF-8";

  @media (min-width: 700px) {
    a {
      color: #fff;
    }
  }
}

.comment-whitespace-inside {
  /* comment */

  /** comment **/

  /**
   * comment
   */
}

.indentation {
  a {
    background-position: 50% 0;
  }
}

.max-empty-lines {
  a {
    color: #fff;
  }

  b {
    color: #000;
  }

  /*
    Comment

    You shouldn't be able to read this
  */
}

// no-duplicate-selectors

.foo {
  color: #000;
}

@media (min-width: 10px) {
  .foo {
    color: #fff;
  }
}

.boo {
  .boo {
    color: #fff;
  }
}

a b {
  color: #fff;
}

a {
  & b,
  & em {
    color: #000;
  }
}
